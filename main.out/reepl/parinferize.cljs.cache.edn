;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name reepl.parinferize, :imports nil, :requires {clojure.string clojure.string, parinfer-codemirror.state parinfer-codemirror.state, parinfer-codemirror.editor-support parinfer-codemirror.editor-support}, :uses {get-prev-state parinfer-codemirror.editor-support, set-frame-updated! parinfer-codemirror.editor-support, join clojure.string, frame-updated? parinfer-codemirror.editor-support, fix-text! parinfer-codemirror.editor-support, update-cursor! parinfer-codemirror.editor-support, state parinfer-codemirror.state, empty-editor-state parinfer-codemirror.state, IEditor parinfer-codemirror.editor-support, cm-key parinfer-codemirror.editor-support}, :defs {on-change {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 35, :column 7, :end-line 35, :end-column 16, :arglists (quote ([cm change])), :doc "Called after any change is applied to the editor."}, :name reepl.parinferize/on-change, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :end-column 16, :method-params ([cm change]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cm change])), :doc "Called after any change is applied to the editor."}, on-state-change {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 107, :column 7, :end-line 107, :end-column 22, :arglists (quote ([_ _ old-state new-state])), :doc "Called everytime the state changes to sync the code editor."}, :name reepl.parinferize/on-state-change, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :end-column 22, :method-params ([_ _ old-state new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_ _ old-state new-state])), :doc "Called everytime the state changes to sync the code editor."}, editor-opts {:name reepl.parinferize/editor-opts, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 64, :column 1, :end-line 64, :end-column 17, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 64, :column 6, :end-line 64, :end-column 17}}, force-editor-sync! {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 115, :column 7, :end-line 115, :end-column 25, :arglists (quote ([]))}, :name reepl.parinferize/force-editor-sync!, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-cursor-activity {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 43, :column 7, :end-line 43, :end-column 25, :arglists (quote ([cm])), :doc "Called after the cursor moves in the editor."}, :name reepl.parinferize/on-cursor-activity, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :end-column 25, :method-params ([cm]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cm])), :doc "Called after the cursor moves in the editor."}, start-editor-sync! {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 119, :column 7, :end-line 119, :end-column 25, :arglists (quote ([]))}, :name reepl.parinferize/start-editor-sync!, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, before-change {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 26, :column 7, :end-line 26, :end-column 20, :arglists (quote ([cm change])), :doc "Called before any change is applied to the editor."}, :name reepl.parinferize/before-change, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :end-column 20, :method-params ([cm change]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cm change])), :doc "Called before any change is applied to the editor."}, parinferize! {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 71, :column 7, :end-line 71, :end-column 19, :arglists (quote ([cm key- parinfer-mode])), :doc "Add parinfer goodness to a codemirror editor"}, :name reepl.parinferize/parinferize!, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :end-column 19, :method-params ([cm key- parinfer-mode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cm key- parinfer-mode])), :doc "Add parinfer goodness to a codemirror editor"}, on-tab {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 50, :column 7, :end-line 50, :end-column 13, :arglists (quote ([cm])), :doc "Indent selection or insert two spaces when tab is pressed.\n  from: https://github.com/codemirror/CodeMirror/issues/988#issuecomment-14921785"}, :name reepl.parinferize/on-tab, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :end-column 13, :method-params ([cm]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cm])), :doc "Indent selection or insert two spaces when tab is pressed.\n  from: https://github.com/codemirror/CodeMirror/issues/988#issuecomment-14921785"}, frame-updates {:name reepl.parinferize/frame-updates, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 24, :column 1, :end-line 24, :end-column 19, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/parinferize.cljs", :line 24, :column 6, :end-line 24, :end-column 19}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:frame-updated? :matchBrackets :Tab :mode :extraKeys :cm :change :editor-updater :text}, :order [:change :mode :matchBrackets :extraKeys :Tab :cm :frame-updated? :text :editor-updater]}, :doc nil}