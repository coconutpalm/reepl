;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name reepl.timers, :imports nil, :requires nil, :uses nil, :defs {check-timer {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 28, :column 7, :end-line 28, :end-column 18, :arglists (quote ([state timer]))}, :name reepl.timers/check-timer, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 18, :method-params ([state timer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state timer]))}, add-timer {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([state time handler]))}, :name reepl.timers/add-timer, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 16, :method-params ([state time handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state time handler]))}, update-ivals {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 43, :column 7, :end-line 43, :end-column 19, :arglists (quote ([state]))}, :name reepl.timers/update-ivals, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, check-ival {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([state [name timer]]))}, :name reepl.timers/check-ival, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 17, :method-params ([state p__16128]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state [name timer]]))}, remove-ival {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([state name]))}, :name reepl.timers/remove-ival, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 18, :method-params ([state name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state name]))}, num-timers {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 3, :column 7, :end-line 3, :end-column 17, :arglists (quote ([state]))}, :name reepl.timers/num-timers, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, update-timers {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 38, :column 7, :end-line 38, :end-column 20, :arglists (quote ([state]))}, :name reepl.timers/update-timers, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, add-ival {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 16, :column 7, :end-line 16, :end-column 15, :arglists (quote ([state name time handler]))}, :name reepl.timers/add-ival, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 15, :method-params ([state name time handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state name time handler]))}, timer-ready {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 25, :column 7, :end-line 25, :end-column 18, :arglists (quote ([timer]))}, :name reepl.timers/timer-ready, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 18, :method-params ([timer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timer]))}, new-timer {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 6, :column 7, :end-line 6, :end-column 16, :arglists (quote ([time handler]))}, :name reepl.timers/new-timer, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 16, :method-params ([time handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([time handler]))}, middleware {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 54, :column 7, :end-line 54, :end-column 17, :arglists (quote ([options]))}, :name reepl.timers/middleware, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 17, :method-params ([options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([options]))}, update-fn {:protocol-inline nil, :meta {:file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :line 48, :column 7, :end-line 48, :end-column 16, :arglists (quote ([orig state]))}, :name reepl.timers/update-fn, :variadic false, :file "/Users/jared/.boot/cache/tmp/Users/jared/clone/clojure/reepl/1sf7/rcesf6/reepl/timers.cljs", :end-column 16, :method-params ([orig state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([orig state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:time :start :update :reepl.timers/timers :handler :reepl.timers/ivals}, :order [:reepl.timers/timers :start :time :handler :reepl.timers/ivals :update]}, :doc nil}